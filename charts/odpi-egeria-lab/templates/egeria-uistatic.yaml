# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
{{ if .Values.egeria.egeriaui }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: uistatic-nginx-conf
  name: {{ .Release.Name }}-uistatic-nginx-conf
data:
  nginx.conf: |
    # SPDX-License-Identifier: Apache-2.0
    # Copyright Contributors to the Egeria project.
    worker_processes  auto;
    #error_log  /var/log/nginx/error.log notice;
    events {
      worker_connections  1024;
    }
    pid        /tmp/nginx.pid;
    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
      #access_log  /var/log/nginx/access.log  main;
      sendfile        on;
      keepalive_timeout  65;
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;
      include /etc/nginx/conf.d/*.conf;
    }
...
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: uistatic
  name: {{ .Release.Name }}-uistatic

spec:
  type: {{ .Values.service.type }}
  ports:
    - port: 8443
      targetPort: 8443
      {{- if ( eq  .Values.service.type "NodePort" ) }}
      nodePort: {{ .Values.service.nodeport.uistatic }}
      {{- end }}
  selector:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: uistatic
...
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myapp.fullname" . }}-uistatic
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: uistatic

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "myapp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: uistatic
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "myapp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: uistatic
    spec:
      containers:
        - name: presentation
          image: "{{ if (.Values.image.uistatic.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.uistatic.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.uistatic.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.uistatic.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.uistatic.name }}\
                  :{{ .Values.image.uistatic.tag | default .Values.egeria.version }}"
          imagePullPolicy: {{ .Values.image.uistatic.pullPolicy | default .Values.imageDefaults.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: 8443
          readinessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 6
          resources: {{ toYaml .Values.egeria.uistatic.resources | nindent 12 }}
          #env:
          #  - name: EGERIA_PRESENTATIONSERVER_SERVER_coco
          #    value: "{\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://{{ .Release.Name }}-datalake:9443\"}"
          env:
            - name: JAVA_OPTS_APPEND
              value: {{ .Values.egeria.uistatic.jvmopts | quote }}
          volumeMounts:
            - name: template-vol
              mountPath: /etc/nginx/templates
            - name: conf-vol
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: confd-vol
              mountPath: /etc/nginx/conf.d
            - name: ssl-vol
              mountPath: /etc/nginx/ssl
            - name: pass-vol
              mountPath: /etc/nginx/pass
          env:
            - name: NGINX_SERVER_NAME
              value: {{ .Release.Name}}-uistatic
            - name: EGERIA_UI_API_URL
              value: "https://{{ .Release.Name }}-ui:8443"
            - name: REACT_APP_API_URL
              value: "https://{{ .Release.Name }}-ui:8443"
            - name: UI_API
              value: "https://{{ .Release.Name }}-ui:8443"
      restartPolicy: Always
      volumes:
        - name: template-vol
          configMap:
            name: {{ .Release.Name }}-uistatic-template-configmap
        # default config file - read only (configmap)
        - name: conf-vol
          configMap:
            name: {{ .Release.Name }}-uistatic-nginx-conf
        # Created each time, so an empty local directory is suitable. Must be writeable
        - name: confd-vol
          emptyDir: { }
        - name: ssl-vol
          secret:
            secretName: {{ .Release.Name }}-uistatic-ssl
            items:
              - key: tls.key
                path: tls.key
              - key: tls.crt
                path: tls.crt
        - name: pass-vol
          secret:
            secretName: {{ .Release.Name }}-uistatic-ssl-pass
            items:
              - key: pass.txt
                path: pass.txt

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: etc
  name: {{ .Release.Name }}-uistatic-template-configmap
{{- if and (.Files.Glob "etc/staticui.conf.template") }}
binaryData:
  {{- $root := . }}
  {{- range $path, $bytes := .Files.Glob "etc/staticui.conf.template" }}
  {{ base $path }}: {{ $root.Files.Get $path | b64enc | quote }}
  {{- end }}
  {{- end }}

...
---
# The built in tls type is fixed to key/cert. So we need another secret to manage the key password (if required)
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: uistatic-ssl-pass
  name: {{ .Release.Name }}-uistatic-ssl-pass
data:
  # echo 'egeria' | base64
  pass.txt: ZWdlcmlhCg==
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: uistatic-ssl
  name: {{ .Release.Name }}-uistatic-ssl
type: kubernetes.io/tls
# TODO - Initially hardcoded here to prove the k8s deployment/nginx config. Certs are copied from egeria master 17 Mar 2021
# See open-metadata-resources/open-metadata-deployment/certificates . We're using the EgeriaClient certs
# Also see https://stackoverflow.com/questions/51899844/nginx-ssl-no-start-line-expecting-trusted-certificate - for TRUSTED issue
data:
  # cat EgeriaUIChassis.cert.pem | sed 's/CERTIFICATE/TRUSTED CERTIFICATE/g' | base64
  tls.crt: LS0tLS1CRUdJTiBUUlVTVEVEIENFUlRJRklDQVRFLS0tLS0KTUlJRkZUQ0NBdjJnQXdJQkFnSUNFQVl3RFFZSktvWklodmNOQVFFTEJRQXdYakVMTUFrR0ExVUVCaE1DVlZNeApDekFKQmdOVkJBZ01Ba05CTVJFd0R3WURWUVFLREFoTVJrRkpSR0YwWVRFdk1DMEdBMVVFQXd3bVJXZGxjbWxoClNXNTBaWEp0WldScFlYUmxRMlZ5ZEdsbWFXTmhkR1ZCZFhSb2IzSnBkSGt3SGhjTk1qTXdNekE1TVRJek1EUTQKV2hjTk1qUXdNekU0TVRJek1EUTRXakJCTVFzd0NRWURWUVFHRXdKVlV6RUxNQWtHQTFVRUNBd0NRMEV4RVRBUApCZ05WQkFvTUNFeEdRVWxFWVhSaE1SSXdFQVlEVlFRRERBbFZTVU5vWVhOemFYTXdnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG5oRXBwVGNzaEZLR0FwK01oUTRRVGdsKzVxYUp2WHhjcTdsS3kKSDVPNk5LMm82VVhqaHNiWnNXUmJPdEsrdmxuRTV2b1pMdEkyWFFPK3dUUG1CNWhJb2xPcmNzL00wTXVJSHZIZgpqTXFsajJJamZMcXZKK1FvZkFwOStoWVBUTkFqQjJoYUZuczZDc1FLN1BhT1BmQnlqQi8yaWRVNncvYWV5YXB0Ck8wZG93QlNmdzBobXA3ZDBzR1ZHa2c2VEhOeFdMb053RXF3NXdibWNlQzIxajVHaUkwVzNOR2kxbnI1RnVUdkUKWlJUYTJOV2lEanhqSkFYMDROS0tqVzIyZ0ZjYzVUV0h6OUNpK1NXRVB1ZzFuMUdyK0NtbUZXWGVKSkw1b0pBNwp1T2V2dFcvOTVmTXVDZUIwSWpqdjF5YTNDNHFZR21aSk1wL3cwa1lrZ3BsSFVBMU5BZ01CQUFHamdma3dnZll3CkNRWURWUjBUQkFJd0FEQVJCZ2xnaGtnQmh2aENBUUVFQkFNQ0JrQXdIUVlEVlIwT0JCWUVGUHd4Z1BxdGpkOFgKaGEwNDRjQlZWd0hDbEtXZE1Bc0dBMVVkRHdRRUF3SUY0REFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQVRBVQpCZ05WSFJFRURUQUxnZ2xzYjJOaGJHaHZjM1F3ZndZRFZSMGpCSGd3ZG9BVXNDdWI3ZlFUekN4bldzTTNCQ3pBCmlZWjZjYjZoV3FSWU1GWXhDekFKQmdOVkJBWVRBbFZUTVFzd0NRWURWUVFJREFKRFFURVJNQThHQTFVRUNnd0kKVEVaQlNVUmhkR0V4SnpBbEJnTlZCQU1NSGtWblpYSnBZVkp2YjNSRFpYSjBhV1pwWTJGMFpVRjFkR2h2Y21sMAplWUlDRUFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFLdm81ZG5DcGw4Z3doT2dycjZXekJGc1FKVWM0bGtUCis2cUhBN3JVV3VTV3hOeTB3OVgyTitKUkc3emo4SHZkY0FWZ2NpK0xrb1BDWDF4L1VWNi95M3YxQVpZcFIwU3IKS0dYdDF6QTJlcFFLbFBHdzlUdWptbUZmSEwydFpqYUpEV0ZmZTVVZERPRXo5V3dZaFk3UUZENWd1SWJhS1NzdQo1T01tNkNpT2pRbFg3a2E5U1BSZ09tN082ZlNZYVVQWndkNU9BdTRDSDN5dm13T2JITWMxRXkvL0E2YmNYU3RmCkxDNUU5K3d1Wm5TZkcyWGJsT1E2bUZLTXArSittY3ZRZk0rMFh3NEI0L216RGhWM3g0czhZM25PZzlDNVFyOVkKWk9aaytTK24vQWRQK2xyajBMMmRkd2JWdmQ4SkhiNEhPMm0vYmMvc0MzTlZIQndaNk16YmVWQjFCTTRTL1RudgphTTloRExZVkFTQ3k3Uk5iay83TldWK01IYWdSMXBBTmZvSklNVUVEaTgzS0hpdkZIYTNVMThZQ2RERjRUTmpTCkF2TmJJcGZrTFlqcS9jQzBScGtXYUx4YnA3ZVQwV1FMU29DNC80MWpSRnBrNnE2ZmFQR3VNWTBVWHM1ZzZFUUIKQkJGSmFFV2VXVDR6UURYcWNqMDV0ZEx5b2poT3VkOUI3QXFXU3FrZ2FGakVEOHZKdFA5VTU5dExGQnErU1AvbwpUSGR1NW5nUTFTSURpbUtWUXBSWGVKYndpR3FDSCtycG56elV2bkNON3VwUTdpMEZvZmRNSStQYjJ4U1g3eDAzCjFQSzZyVitNakU1Y2NCTWo5R3BpWjA0NTYrU0RLdmxFRG1sUVFXbXV1dWdWKzI4ZjZKa1VJVEdBaHRIR2d0WlkKZUF6bDNTaWIyU3dnCi0tLS0tRU5EIFRSVVNURUQgQ0VSVElGSUNBVEUtLS0tLQo=
  # cat EgeriaUIChassis.key.pem | base64
  tls.key: LS0tLS1CRUdJTiBFTkNSWVBURUQgUFJJVkFURSBLRVktLS0tLQpNSUlGTFRCWEJna3Foa2lHOXcwQkJRMHdTakFwQmdrcWhraUc5dzBCQlF3d0hBUUlPSHpMMHdOanhtNENBZ2dBCk1Bd0dDQ3FHU0liM0RRSUpCUUF3SFFZSllJWklBV1VEQkFFcUJCRDFza3d3dHFXYmNMM3RxMDR0bUxwNUJJSUUKMEZJcFZnQXMvY0ZGZnZSSzl2Sisza2tFQ1htYm9HTUoyUUU5dEhVRFVJQ2Z5WFUvVHZiT0lxZkYwK1VvZENIVgpZamVVZE10NWJWY2NIWUdHRitjaENiQmt3Y21sK0FyT3h0R2l0YUc4NWRYZ0dERUo0dVVSZFpWNVBvdU02SU83CkZXV0VnOUlBMDhERWg2Nk1pUkdiRXVpTjJHdnhLQ3NLUzVCRDE2S1hJMm9PT2pFVWRjdjh5YXRKUStoUlVZQXAKejlNTGZndnlSbDJUUCswQjF6bHg1bHg5c3poRy9PVkNKUm4wR25Vc1c5bW9sWWs4Z3dtSUQ1NGI4R25KZEJJeApxOTdmaXg2YVhENXdzQ2UxbnBhR0RQeXV1L1BtUzR6SWlZNkxiaFhYR0krd0p6MGlLTnMxWmZQOXpmcnJ2Ymg5ClY0Rm1yYUdPeGxaeUZKMkRzd3R0NHI5YjhPOTFyK0NhOGJvVHp5UDZwL2ZzNTcrMzA3WmkrRFlJdC9YREl1OG0KdERzK09tdUIvdk9hOGNXZlZkUXAzVlZqMFAzSkVtSkp2T0NpYVRVeUtyLzlvcE9IdWxoMVZONDlEMTh4M0NMcgpCWHRHaVU4V1k5a2xZWjBaK1ZIT1lLaUdKOUdyNklCeHRzWEhaVml3OFdBMG1aRG5TU1QxZFNHeDM5SVFxOXdPClZZNlZ4U0IrdVErT1B0bktHYm5KaWpUU3NsdU5rWUhGbmJOKzB4NjRyd3lhNXhwWEFLNVVmVnRYZGVleUlzdk4KR0Z6cTBIeWFTeVR2c0F4OEtNTVFidXVoSERyRXVuVFBBaUJwYmVzS0o1dUlnQ1FhR2s0QmlmS1dqbWREU2xEdQpJRWkvblBRUHdyZ1N5N3NkdUJPSVlaYUlyM0pVeWRmby9lZ2UxZG9IZS9ZYWNBcFBtUE1DS2xPZzhkcUwzYTNyCkVIYzhsdmUxY0l5NEd5clBRTkhHRWFTOXdiRUNmR0lhNXBGWVlnNStuWFU1QXlzakJaeFVuQ3VCTEhiT05sVGEKaFhNMnMrd3pNVSs4YTZBQzdTcTNJbzRocTFORjczRGttUVdRa2s2MHVDTWV3bjdxL1F5SDRzR2R4dHNXR1ZBWQpaSkw0ei90OU9uZlVjd1BZVlN4YmszYkszbFhBS0FNNlRGcmpadmh0VS94Vlk0cU85TnVwSVZ6Y2VaMHV2VTIyCmFGYUpIT29ZK3ptekRxL2dGOU00djFwM0xMUkxCQjhXT2F4ckZ4dS9rdXhDSHBPVmxCdWVTc2hpclhXR00ydEMKeHVCUFFkVXlLQjY1Z1dUUUt2VzRpUE1hU1ozaVU3TEIycmNqR3I0dVNqZFZCenVmN2twSTZ6RTBTS0xveGxjNwpjRmFsUDRkNFRpM1BXa3Z3SVUxSlppVGp1bmdGQnFPWlZOY1RrUG9mQUkzS1JscktGc2kvU3d5bi9iMS9LclplCjM0SDJPeFJLVlZXVUlWZ3pxay84THlHNWpXUTRBQ0xmZ0tRdFlTUFdyVGVuMU1UVHRvYWxhTUNnaVV1WW1KbTAKaTMyZzRreGtSdEN1YTFEMWxSUFUreGxWL0VSWFBvU2lOa1h0SjZIY2xKbTUzd0dqWHdlVHVJQTZaOUl0NythYgpnOUpTZUtaVnBoVWZIa1dHcm1zSTV3aUdhNW95dVBDMURqVHdyRFk1cEhITCtoQlJhd0NSL1lOM1kvZDBqQmRJCjBYZXkyOFRLM0RwRExQM2N3cjh4UzR4NzA0VGszVTlucVJwT0lSNXhKbTZWTXprcEdYNzd5RU5UN1lQSnVndzQKcVVrVmVzM2prQ01FZzh5OEQramhtRGNjSXppRkRqTSsvLzh1YTA4M0xoMnpJS1lvdE0wMU51Z2JMallJQVJVVQoyQnJPdHltMFVGRUFBUzMvS3RNMGw1eU83MXNCYUpvRVQ0QnBnaUkrOVlvQTRzSlI2aERYRHJXbE52T3laN2hSCkZTWXRiMEYwN0hkTXYyZVhSMkxqWC9jdGUyOTIvbjJVRUVBTm9JaWZiSThDMHVZeExOWnNZbXhBOHhEY2JFczMKclVvYlhUWmppL0Y3Vm1VRGJIcFIxVUU2ZlpzQ3NHOUY5Y05PelN0S3FnYjV6ZlJSR3c2TmNuZjBTNzNLVEFvdwpzdExtU0xucVhDbnVCT2tzMUdMTWd4cTVHM1VkUzg0eDBhYjNIYXlUSk9QbwotLS0tLUVORCBFTkNSWVBURUQgUFJJVkFURSBLRVktLS0tLQo=
...
{{ end }}
