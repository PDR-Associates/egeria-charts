# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.

{{ if .Values.lineage.config }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "egeria-lineage.name" . }}-config
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ include "egeria-lineage.chart" . }}
    app.kubernetes.io/name: {{ include "egeria-lineage.name" . }}
  annotations:
    {{ if .Values.options.jobs.config.usehook }}
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": "{{ if .Values.options.jobs.config.jobdelete }} hook-succeeded , {{ end }} before-hook-creation"
    {{ end }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "egeria-lineage.name" . }}
    spec:
      {{- include "egeria-lineage.security" . | nindent 6 }}
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-egeria-base
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.lineage.version }}"
          imagePullPolicy: {{ (.Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy) | default (ternary "Always" "IfNotPresent" ( hasSuffix "SNAPSHOT" (.Values.image.configure.tag | default .Values.lineage.version )))  }}
          env:
            - name: SERVICE
              value: {{ .Release.Name }}-platform
        - name: wait-for-egeria-lineage
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.lineage.version }}"
          imagePullPolicy: {{ (.Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy) | default (ternary "Always" "IfNotPresent" ( hasSuffix "SNAPSHOT" (.Values.image.configure.tag | default .Values.lineage.version )))  }}
          env:
            - name: SERVICE
              value: {{ include "egeria-lineage.fullname" . }}
        - name: wait-for-kafka
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.lineage.version }}"
          imagePullPolicy: {{ (.Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy) | default (ternary "Always" "IfNotPresent" ( hasSuffix "SNAPSHOT" (.Values.image.configure.tag | default .Values.lineage.version )))  }}
          env:
            - name: SERVICE
              value: {{ .Release.Name }}-strimzi-kafka-bootstrap
        - name: wait-for-egeria-base-configuration
          image: bitnami/kubectl
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -exc
            - |
              while [[ $(kubectl get job {{ include "egeria-base.JobName" . }}-config -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}') != "True" ]]; do { 
                printf "Waiting for job \"{{ include "egeria-base.JobName" . }}-config\" to complete...\n" && sleep 1;
              } done 
      containers:
        - name: initialize
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.lineage.version }}"
          imagePullPolicy: {{ (.Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy) | default (ternary "Always" "IfNotPresent" ( hasSuffix "SNAPSHOT" (.Values.image.configure.tag | default .Values.lineage.version )))  }}
          envFrom:
            - configMapRef:
                name: {{ include "egeria-base.configMapName" . }}
          env:
            - name: EGERIA_LINEAGE_TOPIC_NAME
              value: {{ .Values.lineage.topic.prefix }}.{{ .Values.lineage.topic.name }}
            - name: EGERIA_LINEAGE_CONSUMER_ID
              value: {{ .Values.lineage.consumerId }}
            - name: EGERIA_LINEAGE_SERVER_NAME
              value: {{ .Values.lineage.serverName }}
            - name: EGERIA_LINEAGE_ENDPOINT
              value: https://{{ .Release.Name }}-{{ .Chart.Name }}:{{ .Values.service.port }}
          command: [ "/bin/bash" ]
          args: [ "/scripts/config-lineage1.sh" ]
          volumeMounts:
          - name: scripts-vol
            mountPath: /scripts
      volumes:
        - name: scripts-vol
          configMap:
            name: {{ include "egeria-lineage.name" . }}-scripts-configmap
  # Keep trying quite a few times to aid in debugging
  backoffLimit: {{ .Values.options.jobs.config.backOffLimit }}
  {{ end }}
